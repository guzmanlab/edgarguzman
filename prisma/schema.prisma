// @prisma/schema-prisma

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Version 1 : Mongo Database

// model Session {
//   id           String   @id @default(auto()) @map("_id") @db.ObjectId
//   sessionToken String
//   userId       String   @db.ObjectId
//   expires      DateTime

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

// model VerificationToken {
//   identifier String   @id @default(auto()) @map("_id") @db.ObjectId
//   token      String   @unique
//   expires    DateTime

//   @@unique([identifier, token])
// }

// model Home {
//   id          String   @id @default(auto()) @map("_id") @db.ObjectId
//   picture     String?  @default("")
//   title       String
//   description String?
//   price       String
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   owner       User     @relation(fields: [ownerId], references: [id])
//   ownerId     String   @db.ObjectId
//   // description String?
// }

// // model Post {
// //   id    String @id @default(auto()) @map("_id") @db.ObjectId
// //   title String
// //   body  String
// // }

// model User {
//   // id    String  @id @default(auto()) @map("_id") @db.ObjectId
//   // email String  @unique
//   // name  String?
//   // // posts Post[]

//   id             String    @id @default(auto()) @map("_id") @db.ObjectId
//   firstName      String?
//   lastName       String?
//   email          String?   @unique
//   emailVerified  DateTime? @unique
//   avatar         String?   @default("")
//   accounts       Account[]
//   sessions       Session[]
//   listedProducts Home[]
// }

// model Product {
//   id          String  @id @default(auto()) @map("_id") @db.ObjectId
//   title       String
//   description String?
//   price       String
//   picture     String  @default("")
// }

// model Account {
//   id                 String  @id @default(auto()) @map("_id") @db.ObjectId
//   userId             String  @db.ObjectId
//   type               String
//   provider           String
//   providerAccountId  String
//   refresh_token      String?
//   access_token       String?
//   expires_at         Int?
//   token_type         String?
//   scope              String?
//   id_token           String?
//   session_state      Int?
//   oauth_token_secret String?
//   oauth_token        String?

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
// }

// Version 2

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "mongodb"
//   url      = env("DATABASE_URL")
// }

// model Account {
//   id                 String  @id @default(auto()) @map("_id") @db.ObjectId
//   userId             String  @db.ObjectId
//   type               String
//   provider           String
//   providerAccountId  String
//   refresh_token      String?
//   access_token       String?
//   expires_at         Int?
//   token_type         String?
//   scope              String?
//   id_token           String?
//   session_state      String?
//   oauth_token_secret String?
//   oauth_token        String?

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
// }

// model Session {
//   id           String   @id @default(auto()) @map("_id") @db.ObjectId
//   sessionToken String   @unique
//   userId       String   @db.ObjectId
//   expires      DateTime
//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

// model User {
//   id            String    @id @default(auto()) @map("_id") @db.ObjectId
//   name          String?
//   email         String?   @unique
//   emailVerified DateTime?
//   image         String?
//   accounts      Account[]
//   sessions      Session[]
//   listedHomes   Home[]
// }

// model VerificationToken {
//   identifier String   @id @default(auto()) @map("_id") @db.ObjectId
//   token      String   @unique
//   expires    DateTime

//   @@unique([identifier, token])
// }

// model Home {
//   id          String   @id @default(auto()) @map("_id") @db.ObjectId
//   image       String?
//   title       String
//   description String
//   price       Float
//   guests      Int
//   beds        Int
//   baths       Int
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   owner       User     @relation(fields: [ownerId], references: [id])
//   ownerId     String   @db.ObjectId
// }

// Version 3

// model Account {
//   id                 String  @id @default(cuid())
//   userId             String
//   type               String
//   provider           String
//   providerAccountId  String
//   refresh_token      String? @db.Text
//   access_token       String? @db.Text
//   expires_at         Int?
//   token_type         String?
//   scope              String?
//   id_token           String? @db.Text
//   session_state      String?
//   oauth_token_secret String?
//   oauth_token        String?

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
// }

// model Session {
//   id           String   @id @default(cuid())
//   sessionToken String   @unique
//   userId       String
//   expires      DateTime
//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

// model User {
//   id             String    @id @default(cuid())
//   name           String?
//   email          String?   @unique
//   emailVerified  DateTime?
//   image          String?
//   slug           String?
//   accounts       Account[]
//   sessions       Session[]
//   listedHomes    Home[]
//   listedProducts Product[]
// }

// model VerificationToken {
//   identifier String
//   token      String   @unique
//   expires    DateTime

//   @@unique([identifier, token])
// }

// model Home {
//   id          String   @id @default(cuid())
//   image       String?
//   title       String
//   description String
//   price       Float
//   slug        String?
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   User        User     @relation(fields: [userId], references: [id])
//   userId      String
// }

// model Product {
//   // id          String  @id @default(cuid())
//   // image       String?
//   // title       String
//   description String
//   price       String
//   // slug        String?
//   // createdAt   DateTime @default(now())
//   // updatedAt   DateTime @updatedAt
//   User        User?   @relation(fields: [userId], references: [id])
//   userId      String?

//   id    String  @id @default(cuid())
//   title String?
//   email String? @unique
//   image String?
//   slug  String?
// }

// Test Version Only 4

model User {
  id        String   @id @default(uuid())
  // username       String   @unique
  // name           String?
  // bio            String?  @db.Text
  // website        String?
  email     String?  @unique
  provider  String
  password  String?
  // badge          String?
  // bgImage        String?
  // profileImage   String?
  createdAt DateTime @default(now())
  // followersCount Int      @default(0)
  // followingCount Int      @default(0)
  // likeCount      Int      @default(0)
}
